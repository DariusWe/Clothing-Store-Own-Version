AKTUELLE BAUSTELLEN:
#########################################################################################################################

Can't store images locally, as webpack forces you to pass a static path to the require function. Dynamic paths not possible.
As react sends the whole app package to the client, sending all the images with it would probably not be a good idea anyways.
Look for a fast hosting service for images. Or maybe ask on stackoverflow for best solution.
YOU CAN STORE ASSETS IN PUBLIC FOLDER. THIS HAS DISADVANTAGES. DIG INTO WEBPACK TO UNDERSTAND COMPLETELY!
- Add Men products and GIT PUSH


WHAT I'VE LEARNED LAST TIME:
#########################################################################################################################

ENV File:
- To use it, npm package has to be installed (dotenv)
- Create-react-app installs dotenv by default
- Values that may differ depending on environment (local, staging, production, ...) are stored here.
- Often sensitive data is stored here, so don't push on github.
- QUESTION: how does production environment know about this data then?

STRIPE:
- to implement stripe, we need a backend to store the secret key
- As we do not want to run our own server at the time, we can use serverless functions on netlify
- to register app we need to call loadStripe(public_key) in our app and pass its return value into the <Elements> wrapper component
- The Elements wrapper component also gives us access to Stripe Elements (like a credit card form etc.)

BACKEND:
- to get into Backend programming and to set up your own server, learn node.js and express.js

CLI stands for Command Line Interface



TO DO:
#########################################################################################################################

- Man index page and two more men categories
- Move images to own server
- GIT PUSH
- Include Wish-list
- Include real world login and register procedure
- Add more content to checkout process
- Implement "add to basket" when hovering over product
- Implement animations and click feedback
- optimize
- make Responsive

TO IMPLEMENT STRIPE YOU NEED TO KNOW NODE.JS AND EXPRESS.JS:
https://www.youtube.com/watch?v=Oe421EPjeBE

-----------------------------------------------------------------------------------------------------------------------------

- Continue Filter Section:
  - Go through the whole filter functionality and understand it, clean up and improve rerender cycles

- AuthError, AuthErrorCodes
- Continue typing, there are a lot of "any" types yet (for example the reducers/actions/payloads)
- include touch event listener (touchstart?) for outsideClickHandler
- dig into missing dependencies error. Am i using useEffect for wrong purposes?
- save input value into component state -> controlled components
- performance optimizations (code splitting)

RERENDERING PERFORMANCE ISSUES - ignore for now:
- Navigation is re-rendering because of useLocation() hook. That leads to rerendering of all it's children.
- NavbarTop is re-rendering because of navigate(). This is unwanted behaviour, but there is no workaround. Best solution:
  "Use the useNavigate hook in the smallest/lowest-level component possible. It will not save you from re-renders but makes them less costly."
- ShoppingIcon re-renders because of Parent NavbarTop. Could be memoized, but shouldn't as it is a light component.
- Should useLocation not be used in top level component?
- Rerendering in React does not automatically mean rerendering in the dom, right?
- Maybe performance issue not that big?
- maybe use window.location.pathname. It's vanilla JS and not a hook.
- maybe wrap entire app below top level component in another container, which is a react.memo() function.
- Problem:
  Some components render different content depending on the url path. If you open .../women/tops, the category page renders
  the items that belong to the "Tops" category, the navsidebar highlights that you are on the women section, ...
  You could retrieve this information via params, but this is only working if there are params in the url. In my case, i want
  to highlight the women nav link and show the women categories on the index page ("/"), where no parameter in the url exists.
- CategoryPage rerenders 3 times when changing to another category. First render caused by useParams Hook. It rerenders the component and then calls the
  useEffect Hooks. The first useEffectHook will then change the state of the component, which again will lead to a rerender. Third rerender happens by 
  the third useEffect, which reacts to the state change and updates the filters in the global state. The component gets noticed that this global state has changed
  and rerenders again.


- Think about file/folder structure! (maybe feature-based?)
- Redux Saga deprecated, said Redux maintainer: https://stackoverflow.com/questions/72360331/is-it-worth-using-redux-saga-in-long-term
- research render behaviour of my components. Some components are unnecessarily rerendering multiple times.

- Implement global css fonts, color etc. management
- continue WebDev document on google docs

- Fetching products from Firestore: Better, more organized solution?
- Make Responsive
- Optimize etc
- SEO considerations (alt attributes, corrnpm startect html tags, content indexable?, )
- Accessibility (see Zara)
- Indicate Impressum, Privacy and stuff
  
AT THE END:
- Go through optimizing chapter again (for code splitting, dynamic imports etc.)
- Firebase Rule Security
- Redo Spinner Animation for practice
- Replace Spinner Animation with a markup (placeholder) of the loading content.
- Move category description from products-page into database
- Animations and Click-Feedback
- Include better images
- Build Mens Page
- Build Wishlist
- Build Product-Page

- Make a sticky, changing (on scroll) header, that always shows the most important information.
- Fetching all shop data from the database once and then store it in a context variable? Or is it ineffective to fetch ALL data? Maybe
  just fetch the parts you need? But then you would have to make more queries. What is faster and better? Also: Is it possible to fetch
  just the titles of the categorie documents for the shop page? For the shop page you don't need all the single items.
  Solution for now: As not a lot amount of data, i will fetch it with a single query and store it in a react context variable.
- What happens when database changes? Live updates in the UI? And when should these live updates happen?
- global solution to manage content width of pages
- global solution to manage font family and size

- solved: orderBy in firebase.jsx is not working. Solution: orderBy only working in queries, not in getDocs itself.
